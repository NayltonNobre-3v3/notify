{"version":3,"sources":["screens/main.js","routes.js","App.js","index.js"],"names":["Main","props","useState","medicao","setMedicao","local","setItems","ShowEdit","setShowEdit","IDAlert","setIDAlert","idSensor","setIdSensor","nameSensor","setNameSensor","valueSensor","setValueSensor","PositionSensor","setPositionSensor","unitSensor","setUnitSensor","condSensor","setCondSensor","TimeSensor","setTimeSensor","DestSensor","setDestSensor","NameUnit","setNameUnit","sensors","setSensors","searchKeyword","setSearchKeyword","e","a","axios","get","target","value","data","values","map","item","TYPE","ID","NAME","UNIT","ShowEditForm","ListOneSensorEdit","ID_SENSOR","VALUE","COND","TIME","EMAIL","POSITION","searchSubmit","preventDefault","then","useEffect","getValues","className","id","onSubmit","obj","Number","put","catch","error","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","_","htmlFor","type","disabled","onChange","selectedIndex","selectedOptions","title","required","i","key","placeholder","min","max","onClick","post","success","response","console","log","length","defaultValue","selected","pattern","size","toLowerCase","MEDITION","moment","created_at","format","toLocaleLowerCase","href","color","window","confirm","delete","Routes","path","component","MainScreen","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0093bbb9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaPen, FaTrash } from \"react-icons/fa\";\r\nimport { AiFillFrown, AiOutlineSearch } from \"react-icons/ai\";\r\n// import api from \"../api/api\";\r\n\r\nimport axios from 'axios'\r\nimport { toast } from \"react-toastify\";\r\nimport * as moment from \"moment-timezone\";\r\n\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nfunction Main(props) {\r\n  const [medicao, setMedicao] = useState([]);\r\n  const [local, setItems] = useState([]);\r\n  const [ShowEdit, setShowEdit] = useState(false);\r\n  const [IDAlert, setIDAlert] = useState(0);\r\n  const [idSensor, setIdSensor] = useState(0);\r\n  const [nameSensor, setNameSensor] = useState(\"\");\r\n  const [valueSensor, setValueSensor] = useState(0);\r\n  const [PositionSensor, setPositionSensor] = useState(0);\r\n  const [unitSensor, setUnitSensor] = useState(\"\");\r\n  const [condSensor, setCondSensor] = useState(\"\");\r\n  const [TimeSensor, setTimeSensor] = useState(0);\r\n  const [DestSensor, setDestSensor] = useState(\"\");\r\n  const [NameUnit, setNameUnit] = useState(\"\");\r\n  const [sensors,setSensors]=useState([])\r\n\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n\r\n\r\n  // Carrega todo o valores quando eu reiniciar o estado\r\n  useEffect(() => {\r\n     axios.get(\"notify-get-sensors\").then(data=>setSensors(data.data))\r\n  }, []);\r\n\r\n  // Quando iniciar a aplicação irá carregar todos os valores do banco\r\n  useEffect(() => {\r\n    async function getValues() {\r\n      const { data } = await axios.get(\"notify-sensors-alert\");\r\n      setItems(data.data);\r\n    }\r\n    getValues();\r\n  }, []);\r\n\r\n  // Extrai as medições do sensor específico\r\n  async function ListOneSensor(e) {\r\n    const data = await axios.get(`notify-get-sensors/${e.target.value}`);\r\n    const values = data.data.map((item) => item.TYPE);\r\n    setMedicao(values);\r\n    setIdSensor(data.data[0].ID);\r\n    setNameSensor(data.data[0].NAME);\r\n    setNameUnit(data.data[0].UNIT);\r\n    setUnitSensor(\"\");\r\n  }\r\n\r\n  async function ListOneSensorEdit(e) {\r\n    const data = await axios.get(`notify-get-sensors/${e}`);\r\n    const values = data.data.map((item) => item.TYPE);\r\n    setMedicao(values);\r\n    setIdSensor(data.data[0].ID);\r\n    setNameSensor(data.data[0].NAME);\r\n    setNameUnit(data.data[0].UNIT);\r\n  }\r\n\r\n  function submitHandle(e) {\r\n    e.preventDefault();\r\n\r\n    let obj = {\r\n      ID_SENSOR: idSensor,\r\n      VALUE: Number(valueSensor),\r\n      NAME: nameSensor,\r\n      POSITION: Number(PositionSensor),\r\n      UNIT: unitSensor,\r\n      COND: condSensor,\r\n      TIME: Number(TimeSensor),\r\n      EMAIL: DestSensor,\r\n    };\r\n    axios\r\n      .post(\"notify-post-sensor-alert\", obj)\r\n      .then((data) => {\r\n        setItems(data.data.data);\r\n      })\r\n      .then((_) => {\r\n        toast.success(`Alarme criado com sucesso!`, {\r\n          position: \"top-left\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: false,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        setMedicao([]);\r\n        setIdSensor(0);\r\n        setNameSensor(\"\");\r\n        setValueSensor(0);\r\n        setUnitSensor(\"\");\r\n        setCondSensor(\"\");\r\n        setTimeSensor(0);\r\n        setPositionSensor(0);\r\n        setDestSensor(\"\");\r\n        setShowEdit(false);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(`${error.response.data}`, {\r\n          position: \"top-left\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: false,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n        console.log('ERROR= ',error.response.data)\r\n      });\r\n  }\r\n  function submitHandlePUT(e) {\r\n    e.preventDefault();\r\n\r\n    let obj = {\r\n      ID_SENSOR: idSensor,\r\n      VALUE: Number(valueSensor),\r\n      NAME: nameSensor,\r\n      POSITION: Number(PositionSensor),\r\n      UNIT: unitSensor,\r\n      COND: condSensor,\r\n      TIME: Number(TimeSensor),\r\n      EMAIL: DestSensor,\r\n    };\r\n\r\n    axios\r\n      .put(`/notify-put-sensor-alert/${IDAlert}`, obj)\r\n      .then((data) => {\r\n        return setItems(data.data.data);\r\n      })\r\n      .catch(error=>{\r\n        toast.error(\"Opa colega, deu error aí\", {\r\n          position: \"top-left\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: false,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      })\r\n      .then((_) => {\r\n        setMedicao([]);\r\n        setIdSensor(0);\r\n        setNameSensor(\"\");\r\n        setValueSensor(0);\r\n        setUnitSensor(\"\");\r\n        setCondSensor(\"0\");\r\n        setTimeSensor(0);\r\n        setDestSensor(\"\");\r\n        setShowEdit(false);\r\n      });\r\n  }\r\n  function handleDelete(id) {\r\n    if (window.confirm(\"Tem certeza que deseja deletar o alarme?\")) {\r\n      axios\r\n        .delete(`notify-delete-sensor-alert/${id}`)\r\n        .then((data) => {\r\n          toast.success(`Alarme deletado com sucesso!`, {\r\n            position: \"top-left\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          setItems(data.data.data);\r\n        })\r\n        .then((_) => {\r\n          setMedicao([]);\r\n          setIdSensor(0);\r\n          setNameSensor(\"\");\r\n          setValueSensor(0);\r\n          setUnitSensor(\"\");\r\n          setCondSensor(\"0\");\r\n          setTimeSensor(0);\r\n          setDestSensor(\"\");\r\n          setShowEdit(false);\r\n        });\r\n    }\r\n  }\r\n  \r\n  function ShowEditForm(data) {\r\n    setMedicao([]);\r\n    setIdSensor(0);\r\n    setNameSensor(\"\");\r\n    setValueSensor(0);\r\n    setUnitSensor(\"\");\r\n    setCondSensor(\"0\");\r\n    setTimeSensor(0);\r\n    setPositionSensor(\"\");\r\n    setDestSensor(\"\");\r\n    setShowEdit(true);\r\n    \r\n    ListOneSensorEdit(data.ID_SENSOR);\r\n    setNameSensor(data.NAME);\r\n    setValueSensor(data.VALUE);\r\n    setCondSensor(data.COND);\r\n    setTimeSensor(data.TIME / 60);\r\n    setIDAlert(data.ID);\r\n    setDestSensor(data.EMAIL);\r\n    setUnitSensor(data.UNIT);\r\n    setPositionSensor(data.POSITION);\r\n\r\n\r\n  }\r\n  function hideEditForm() {\r\n    setMedicao([]);\r\n    setIdSensor(0);\r\n    setNameSensor(\"\");\r\n    setValueSensor(0);\r\n    setUnitSensor(\"\");\r\n    setCondSensor(\"0\");\r\n    setTimeSensor(0);\r\n    setPositionSensor(0);\r\n    setDestSensor(\"\");\r\n    setShowEdit(false);\r\n  }\r\n  \r\n  function searchSubmit(e) {\r\n    e.preventDefault();\r\n    axios\r\n    .get(`/search?name=${searchKeyword}`)\r\n    .then((data) => setItems(data.data));\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <main>\r\n        <div className=\"monitSelect\" id=\"form\">\r\n          {ShowEdit ? (\r\n            <form onSubmit={submitHandlePUT}>\r\n              <fieldset>\r\n                <h1 id=\"titleForm\">Editar Alarme</h1>\r\n                <br />\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectModel\">Nome do sensor:</label>\r\n                  <input type=\"text\" value={nameSensor} disabled></input>\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectMeasures\">Medição:</label>\r\n                  <select\r\n                    id=\"selectMeasures\"\r\n                    onChange={(e) => {\r\n                      setPositionSensor(e.target.selectedIndex);\r\n                      setUnitSensor(e.target.selectedOptions[0].id);\r\n                    }}\r\n                    value={PositionSensor > 0 ? PositionSensor - 1 : 0}\r\n                    title=\"Medida do sensor\"\r\n                    required\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Selecione\r\n                    </option>\r\n\r\n                    {medicao.map((item) =>\r\n                      item.map((e, i) => (\r\n                        <option\r\n                          value={i}\r\n                          key={i}\r\n                          data={e.UNIT}\r\n                          id={NameUnit[i]}\r\n                        >\r\n                          {e}\r\n                        </option>\r\n                      ))\r\n                      )}\r\n                  </select>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectUnit\">\r\n                    Valor: {NameUnit[PositionSensor]}\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    // min={0}\r\n                    id=\"ValueInput\"\r\n                    value={valueSensor}\r\n                    onChange={(e) => setValueSensor(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"condition\">Condição:</label>\r\n                  <select\r\n                    onChange={(e) => {\r\n                      setCondSensor(e.target.value);\r\n                    }}\r\n                    title=\"Condição para alarmar\"\r\n                    value={condSensor}\r\n                    required\r\n                  >\r\n                    <option value=\"ACIMA\">Acima</option>\r\n                    <option value=\"ABAIXO\">Abaixo</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectTime\" title=\"Tempo em minutos\">\r\n                    Tempo (min):\r\n                  </label>\r\n                  <input\r\n                    id=\"selectTime\"\r\n                    type=\"number\"\r\n                    value={TimeSensor}\r\n                    placeholder=\"Selecione o tempo\"\r\n                    min={0}\r\n                    max={59}\r\n                    onChange={(e) => setTimeSensor(e.target.value)}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectDest\" title=\"Destinatário\">\r\n                    Destinatário:\r\n                  </label>\r\n                  <input\r\n                    id=\"selectDest\"\r\n                    type=\"email\"\r\n                    value={DestSensor}\r\n                    placeholder=\"Selecione o destinatário\"\r\n                    onChange={(e) => setDestSensor(e.target.value)}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                  <button type=\"submit\">Atualizar alerta</button>\r\n                  <button type=\"button\" onClick={(_) => hideEditForm()}>\r\n                    Voltar\r\n                  </button>\r\n                </div>\r\n              </fieldset>\r\n            </form>\r\n          ) : (\r\n            <form onSubmit={submitHandle}>\r\n              <fieldset>\r\n                <h1 id=\"titleForm\">Criar Alarme</h1>\r\n                <br />\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectModel\">Nome do sensor:</label>\r\n                  <select\r\n                    id=\"selectModel\"\r\n                    onChange={ListOneSensor}\r\n                    value={nameSensor ? idSensor : \"1\"}\r\n                    required\r\n                    title=\"Nome do sensor\"\r\n                  >\r\n                    <option value=\"1\" disabled>\r\n                      Selecione\r\n                    </option>\r\n                    {sensors.map((e, i) => (\r\n                      <option value={e.ID} key={i}>\r\n                        {e.NAME}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectMeasures\">Medição:</label>\r\n                  <select\r\n                    id=\"selectMeasures\"\r\n                    disabled={medicao.length === 0 ? true : false}\r\n                    onChange={(e) => {\r\n                      setPositionSensor(e.target.value);\r\n                      setUnitSensor(e.target.selectedOptions[0].id);\r\n                    }}\r\n                    defaultValue={unitSensor}\r\n                    title=\"Medida do sensor\"\r\n                    required\r\n                  >\r\n                    <option value=\"\" selected>\r\n                      Selecione\r\n                    </option>\r\n                    {medicao.map((item) =>\r\n                      item.map((e, i) => (\r\n                        <option\r\n                        value={`${i}`}\r\n                          key={i}\r\n                          id={NameUnit[i]}\r\n                          required\r\n                        >\r\n                          {e}\r\n                        </option>\r\n                      ))\r\n                      )}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectUnit\">\r\n                    Valor: {unitSensor === \"1\" ? \"\" : unitSensor}\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    id=\"ValueInput\"\r\n                    onChange={(e) => setValueSensor(e.target.value)}\r\n                    value={valueSensor}\r\n                    disabled={medicao.length === 0 ? true : false}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"condition\">Condição:</label>\r\n                  <select\r\n                    disabled={medicao.length === 0 ? true : false}\r\n                    onChange={(e) => {\r\n                      setCondSensor(e.target.value);\r\n                    }}\r\n                    title=\"Condição para alarmar\"\r\n                    value={!condSensor ? \"0\" : condSensor}\r\n                    required\r\n                  >\r\n                    <option value=\"0\" disabled>\r\n                      Selecione\r\n                    </option>\r\n                    <option value=\"ACIMA\">Acima</option>\r\n                    <option value=\"ABAIXO\">Abaixo</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectTime\" title=\"Tempo em minutos\">\r\n                    Tempo (min):\r\n                  </label>\r\n                  <input\r\n                    id=\"selectTime\"\r\n                    type=\"number\"\r\n                    placeholder=\"Selecione o tempo\"\r\n                    value={TimeSensor}\r\n                    min={0}\r\n                    max={59}\r\n                    disabled={medicao.length === 0 ? true : false}\r\n                    onChange={(e) => setTimeSensor(e.target.value)}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"selectDest\" title=\"Destinatário\">\r\n                    Destinatário:\r\n                  </label>\r\n                  <input\r\n                    id=\"selectDest\"\r\n                    type=\"email\"\r\n                    value={DestSensor}\r\n                    placeholder=\"Selecione o destinatário\"\r\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                    disabled={medicao.length === 0 ? true : false}\r\n                    onChange={(e) => setDestSensor(e.target.value)}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={medicao.length === 0 ? true : false}\r\n                  >\r\n                    Criar Alerta\r\n                  </button>\r\n                </div>\r\n              </fieldset>\r\n            </form>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"cards-container\">\r\n          <form onSubmit={searchSubmit} className=\"search-input-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Pesquisar alerta\"\r\n              value={searchKeyword}\r\n              onChange={(e) => setSearchKeyword(e.target.value)}\r\n            />\r\n            <p onClick={searchSubmit}>\r\n              <AiOutlineSearch size={24} />\r\n            </p>\r\n          </form>\r\n          <div className=\"mySchedule\">\r\n            <ul className=\"list-cards\">\r\n              {local && local.length !== 0 ? (\r\n                local.map((e, i) => (\r\n                  <li className=\"card\" key={e.ID}>\r\n                    <div className=\"head-card\">\r\n                      <h1>{e.NAME}</h1>\r\n                    </div>\r\n                    <div className=\"content-card\">\r\n                      <p>\r\n                        Condição: {e.COND.toLowerCase()} de {e.VALUE} {e.UNIT}{\" \"}\r\n                        {e.MEDITION}\r\n                      </p>\r\n                      <p>Tempo para enviar alerta: {e.TIME / 60} min</p>\r\n                    </div>\r\n                    <div id=\"footer-Container\">\r\n                      <p className=\"date-detail\">\r\n                        Alerta criado em{\" \"}\r\n                        {moment\r\n                          .tz(e.created_at, \"America/Fortaleza\")\r\n                          .format(\"DD/MM/YYYY  HH:mm:ss\")\r\n                          .toLocaleLowerCase(\"pt-br\")}\r\n                      </p>\r\n\r\n                      <div id=\"buttons-Container\">\r\n                        <a\r\n                          href=\"#form\"\r\n                          className=\"edit-button\"\r\n                          onClick={() => ShowEditForm(e)}\r\n                        >\r\n                          <FaPen color=\"white\" />\r\n                        </a>\r\n                        <button\r\n                          className=\"delete-button\"\r\n                          onClick={(_) => handleDelete(e.ID)}\r\n                        >\r\n                          <FaTrash color=\"white\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <div id=\"not-found\">\r\n                  {\" \"}\r\n                  <AiFillFrown size={60} /> Nenhum alerta registrado\r\n                </div>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport MainScreen from \"./screens/main\";\r\n\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" component={MainScreen} exact/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\n\r\nimport \"./Global.css\";\r\nimport Route from \"./routes\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Route />\r\n      <ToastContainer autoClose={2000}>\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      </ToastContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}